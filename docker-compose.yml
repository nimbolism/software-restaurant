version: '3'

services:
  # User Service
  user-service:
    container_name: user-service-container
    build:
      context: .
      dockerfile: back-end/user-service/Dockerfile
    env_file:
      - .env
    ports:
      - "50050:50050"
    depends_on:
      - postgres
    networks:
      - backend
      - postgres-access
    restart: unless-stopped

  # Card Service
  card-service:
    container_name: card-service-container
    build:
      context: .
      dockerfile: back-end/card-service/Dockerfile
    env_file:
      - .env
    ports:
      - "50051:50051"
    depends_on:
      - postgres
      - user-service
    networks:
      - backend
      - postgres-access
    restart: unless-stopped

# food Service
  food-service:
    container_name: food-service-container
    build:
      context: .
      dockerfile: back-end/food-service/Dockerfile
    env_file:
      - .env
    ports:
      - "50052:50052"
    depends_on:
      - postgres
      - card-service
    networks:
      - backend
      - postgres-access
    restart: unless-stopped

  # Nginx Service
  nginx:
    container_name: nginx-service-container
    image: nginx:latest
    ports:
      - "5050:5050"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-service
      - card-service
      - food-service
    networks:
      - backend
    restart: unless-stopped

  # Postgres Service
  postgres:
    container_name: postgres-service-container
    image: postgres:latest
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - postgres-access
    restart: unless-stopped

  # Redis Database
  redis-database:
    container_name: redis-database-container
    image: redis:latest
    restart: unless-stopped
    volumes:
      - "redis-data:/data"
    env_file:
      - .env
    networks:
      - redis-access

networks:
  backend:
  redis-access:
  postgres-access:

volumes:
  postgres-data:
  redis-data: